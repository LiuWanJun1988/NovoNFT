{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0x7Cb1af16f0f6F8E6575b9d1A33e3f91476Ebf8D3",
    "txHash": "0xfe7ae1306fb3e2c58da99f8746d08d35013985491048dee931afda96e01df002"
  },
  "proxies": [
    {
      "address": "0x7e934402B0a5c5594e495E0aA82048564cb9FD6b",
      "txHash": "0xea5c77494df520fe836390358c4f71a0a03dd1c7c916ab15dd44fd36447ce711",
      "kind": "transparent"
    },
    {
      "address": "0x1cB3610abE430eA0B1db7957E87154bD2F9A240B",
      "txHash": "0xba79a004b8eb576644233d098a690c9067f24d138b80dd402e83ea6ff69dbc8b",
      "kind": "transparent"
    },
    {
      "address": "0x1C9Fb800b0Ca32B40F7F2D238172d5c2329A0068",
      "txHash": "0xf1be6fac46097ec0437cb74621fd520297396ae113e0f45b3aae6f8142181a67",
      "kind": "transparent"
    },
    {
      "address": "0xFCAf44CFA07eE5E9CAC757836A4C45787e284703",
      "txHash": "0x585a1851c2da9a536da76b6d44df6a45215995377657b9819c67c6fcab1e4fbb",
      "kind": "transparent"
    },
    {
      "address": "0x3C7D27FF17585fE76Ce1f002453826292E71713A",
      "txHash": "0x3006c1f50bef2559ba6b0c3f46d01eefb2798d05b745649a9fb2e440b951492f",
      "kind": "transparent"
    },
    {
      "address": "0xee076E95cb1667F274bbF365808BAc0328671BB8",
      "txHash": "0x32cec17e42f409e15f13cb75aa77776fad46bcb2ad4bdcad47e3492f927f06b5",
      "kind": "transparent"
    },
    {
      "address": "0xEc9369DF202B443525c5378D2Ab093c59c9defD2",
      "txHash": "0xcc63eba66ee65fadda8c696637e7d6cebad5085682b9012d02c6fe38d4ec90cc",
      "kind": "transparent"
    },
    {
      "address": "0x7F7F2FD74A56C868E4C0739b90e15A8a557f47f3",
      "txHash": "0x79475145db877545cbf71d0a80db33148d52b16d26cd37f12ed9d6ccbd38c26f",
      "kind": "transparent"
    },
    {
      "address": "0xc6C38181e144C34913f58Dc7B62e91b0db121867",
      "txHash": "0x620ac146b07597b05dbb78a8caa20404efcfb92f68bc53531ff2c89635ac37e2",
      "kind": "transparent"
    },
    {
      "address": "0x25DCfa762Ae0fD3dE794F6E01Fdd2F98bbC33a85",
      "txHash": "0x22a1520e533906a2c90e95f691c8bf6694533b772f392638cda48f4dd4a941c6",
      "kind": "transparent"
    },
    {
      "address": "0x25e8346C97e5218557505F46Aedc222bC9EA05fb",
      "txHash": "0x0160f156906edafc471866091a38877c1589326a6554987688063f1a51f818c1",
      "kind": "transparent"
    }
  ],
  "impls": {
    "8c268578f2c96977bc0298eb1f625f36e6294faeffb640f690a047a03b05d8be": {
      "address": "0x5B4E2186Bd42cEB5f1CCF1551222720B3d2b4d75",
      "txHash": "0x82666401e1434413dd650471af114ff2a1fba12620d29bd3f891d2c2b6e53d92",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:48"
          },
          {
            "contract": "NOVO",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:49"
          },
          {
            "contract": "NOVO",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoToken.sol:50"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:51"
          },
          {
            "contract": "NOVO",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:52"
          },
          {
            "contract": "NOVO",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:53"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromAntiWhale",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:54"
          },
          {
            "contract": "NOVO",
            "label": "_accountsTier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:55"
          },
          {
            "contract": "NOVO",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:57"
          },
          {
            "contract": "NOVO",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:60"
          },
          {
            "contract": "NOVO",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:61"
          },
          {
            "contract": "NOVO",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:62"
          },
          {
            "contract": "NOVO",
            "label": "_maxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:63"
          },
          {
            "contract": "NOVO",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:64"
          },
          {
            "contract": "NOVO",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:66"
          },
          {
            "contract": "NOVO",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:67"
          },
          {
            "contract": "NOVO",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoToken.sol:68"
          },
          {
            "contract": "NOVO",
            "label": "_defaultFees",
            "type": "t_struct(FeeTier)3908_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:70"
          },
          {
            "contract": "NOVO",
            "label": "_previousFees",
            "type": "t_struct(FeeTier)3908_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:71"
          },
          {
            "contract": "NOVO",
            "label": "_emptyFees",
            "type": "t_struct(FeeTier)3908_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:72"
          },
          {
            "contract": "NOVO",
            "label": "feeTiers",
            "type": "t_array(t_struct(FeeTier)3908_storage)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:74"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3396",
            "src": "..\\project:\\contracts\\NovoToken.sol:76"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:77"
          },
          {
            "contract": "NOVO",
            "label": "WBNB",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:78"
          },
          {
            "contract": "NOVO",
            "label": "migration",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:79"
          },
          {
            "contract": "NOVO",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:80"
          },
          {
            "contract": "NOVO",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:81"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:82"
          },
          {
            "contract": "NOVO",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:83"
          },
          {
            "contract": "NOVO",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:85"
          },
          {
            "contract": "NOVO",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:86"
          },
          {
            "contract": "NOVO",
            "label": "antiWhaleEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_antiWhaleAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:89"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:90"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:91"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:92"
          },
          {
            "contract": "NOVO",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:94"
          },
          {
            "contract": "NOVO",
            "label": "canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:95"
          },
          {
            "contract": "NOVO",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:96"
          },
          {
            "contract": "NOVO",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:98"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(FeeTier)3908_storage": {
            "label": "struct NOVO.FeeTier",
            "members": [
              {
                "label": "ecoSystemFee",
                "type": "t_uint256"
              },
              {
                "label": "liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "taxFee",
                "type": "t_uint256"
              },
              {
                "label": "stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "burnFee",
                "type": "t_uint256"
              },
              {
                "label": "ecoSystem",
                "type": "t_address"
              },
              {
                "label": "stakingPool",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(FeeTier)3908_storage)dyn_storage": {
            "label": "struct NOVO.FeeTier[]"
          },
          "t_contract(IUniswapV2Router02)3396": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "096ec9f812c69b42628dcb356e8d27eeeceb3a29ffb67bbbe2feffbddd4c872c": {
      "address": "0x229Be56c468e7521B29540760dD6DD17A190Bf29",
      "txHash": "0x16d7c004dd94960e36d0ef87874f8514db938ad6fd97afbbaa4cde5f0b48aa08",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:48"
          },
          {
            "contract": "NOVO",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:49"
          },
          {
            "contract": "NOVO",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoToken.sol:50"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:51"
          },
          {
            "contract": "NOVO",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:52"
          },
          {
            "contract": "NOVO",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:53"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromAntiWhale",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:54"
          },
          {
            "contract": "NOVO",
            "label": "_accountsTier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:55"
          },
          {
            "contract": "NOVO",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:57"
          },
          {
            "contract": "NOVO",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:60"
          },
          {
            "contract": "NOVO",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:61"
          },
          {
            "contract": "NOVO",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:62"
          },
          {
            "contract": "NOVO",
            "label": "_maxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:63"
          },
          {
            "contract": "NOVO",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:64"
          },
          {
            "contract": "NOVO",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:66"
          },
          {
            "contract": "NOVO",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:67"
          },
          {
            "contract": "NOVO",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoToken.sol:68"
          },
          {
            "contract": "NOVO",
            "label": "_defaultFees",
            "type": "t_struct(FeeTier)3908_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:70"
          },
          {
            "contract": "NOVO",
            "label": "_previousFees",
            "type": "t_struct(FeeTier)3908_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:71"
          },
          {
            "contract": "NOVO",
            "label": "_emptyFees",
            "type": "t_struct(FeeTier)3908_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:72"
          },
          {
            "contract": "NOVO",
            "label": "feeTiers",
            "type": "t_array(t_struct(FeeTier)3908_storage)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:74"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3396",
            "src": "..\\project:\\contracts\\NovoToken.sol:76"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:77"
          },
          {
            "contract": "NOVO",
            "label": "WBNB",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:78"
          },
          {
            "contract": "NOVO",
            "label": "migration",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:79"
          },
          {
            "contract": "NOVO",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:80"
          },
          {
            "contract": "NOVO",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:81"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:82"
          },
          {
            "contract": "NOVO",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:83"
          },
          {
            "contract": "NOVO",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:85"
          },
          {
            "contract": "NOVO",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:86"
          },
          {
            "contract": "NOVO",
            "label": "antiWhaleEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_antiWhaleAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:89"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:90"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:91"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:92"
          },
          {
            "contract": "NOVO",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:94"
          },
          {
            "contract": "NOVO",
            "label": "canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:95"
          },
          {
            "contract": "NOVO",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:96"
          },
          {
            "contract": "NOVO",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:98"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(FeeTier)3908_storage": {
            "label": "struct NOVO.FeeTier",
            "members": [
              {
                "label": "ecoSystemFee",
                "type": "t_uint256"
              },
              {
                "label": "liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "taxFee",
                "type": "t_uint256"
              },
              {
                "label": "stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "burnFee",
                "type": "t_uint256"
              },
              {
                "label": "ecoSystem",
                "type": "t_address"
              },
              {
                "label": "stakingPool",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(FeeTier)3908_storage)dyn_storage": {
            "label": "struct NOVO.FeeTier[]"
          },
          "t_contract(IUniswapV2Router02)3396": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "dfba290731ae1183e730ef0523acdaa4b5730776634d05eac8b4bf5744266756": {
      "address": "0xED1Fd77475302dFBb07b02a2775151C4B7bC824E",
      "txHash": "0x17dae7108f1e7e36f0d200e7f40a1ccdaedb9523d9670684e464587ea928315f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:28"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:29"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "maxSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "revealed",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "notRevealedUri",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3426_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_bool)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_uint256,t_struct(Stake)3426_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3426_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "earnedRewardBalance",
                "type": "t_uint256"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_bool)": {
            "label": "mapping(uint256 => bool)"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "650346bca4e7fbdc012c2ff8ac4ec0d5709ade4870ea69202427b6d741dab249": {
      "address": "0xD978b9474D5B1D5c9a811481f5A05Be6C40AcCc1",
      "txHash": "0x2bb93f9a6f69580e66013cb967e17922ba267e6a0f8b7a5e800b28f81c4c72a5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoStaking.sol:188"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoStaking.sol:193"
          },
          {
            "contract": "ContextSimpleUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:234"
          },
          {
            "contract": "OwnableSafeUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoStaking.sol:251"
          },
          {
            "contract": "NovoStaking",
            "label": "allStakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)4370_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:310"
          },
          {
            "contract": "NovoStaking",
            "label": "stakeCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:312"
          },
          {
            "contract": "NovoStaking",
            "label": "stakerID",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:314"
          },
          {
            "contract": "NovoStaking",
            "label": "stakers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:316"
          },
          {
            "contract": "NovoStaking",
            "label": "cliff",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:318"
          },
          {
            "contract": "NovoStaking",
            "label": "vaultAvailableBalance",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:319"
          },
          {
            "contract": "NovoStaking",
            "label": "NOVO",
            "type": "t_contract(IERC20)3922",
            "src": "..\\project:\\contracts\\NovoStaking.sol:326"
          },
          {
            "contract": "NovoStaking",
            "label": "stackedRewards",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\NovoStaking.sol:328"
          },
          {
            "contract": "NovoStaking",
            "label": "totalStackedRewards",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:329"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_struct(Stake)4370_storage)dyn_storage)": {
            "label": "mapping(address => struct NovoStaking.Stake[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Stake)4370_storage)dyn_storage": {
            "label": "struct NovoStaking.Stake[]"
          },
          "t_struct(Stake)4370_storage": {
            "label": "struct NovoStaking.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IERC20)3922": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "c171df4a07f647dc05caf02212ee045ba6d56293b5bbe69d6eff39391147b00f": {
      "address": "0x3c775212011e9Fff8d26390f739Fe4ff84B3eb5A",
      "txHash": "0x05442e66c8dd2af1e18bf1b4ada34aaf6e74498586224c13adc33cd5a5354e5c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoStaking.sol:188"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoStaking.sol:193"
          },
          {
            "contract": "ContextSimpleUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:234"
          },
          {
            "contract": "OwnableSafeUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoStaking.sol:251"
          },
          {
            "contract": "NovoStaking",
            "label": "allStakes",
            "type": "t_mapping(t_address,t_array(t_struct(Stake)4370_storage)dyn_storage)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:310"
          },
          {
            "contract": "NovoStaking",
            "label": "stakeCount",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:312"
          },
          {
            "contract": "NovoStaking",
            "label": "stakerID",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:314"
          },
          {
            "contract": "NovoStaking",
            "label": "stakers",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:316"
          },
          {
            "contract": "NovoStaking",
            "label": "cliff",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:318"
          },
          {
            "contract": "NovoStaking",
            "label": "vaultAvailableBalance",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:319"
          },
          {
            "contract": "NovoStaking",
            "label": "NOVO",
            "type": "t_contract(IERC20)3922",
            "src": "..\\project:\\contracts\\NovoStaking.sol:326"
          },
          {
            "contract": "NovoStaking",
            "label": "stackedRewards",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\project:\\contracts\\NovoStaking.sol:328"
          },
          {
            "contract": "NovoStaking",
            "label": "totalStackedRewards",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:329"
          }
        ],
        "types": {
          "t_mapping(t_address,t_array(t_struct(Stake)4370_storage)dyn_storage)": {
            "label": "mapping(address => struct NovoStaking.Stake[])"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_struct(Stake)4370_storage)dyn_storage": {
            "label": "struct NovoStaking.Stake[]"
          },
          "t_struct(Stake)4370_storage": {
            "label": "struct NovoStaking.Stake",
            "members": [
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "startTimestamp",
                "type": "t_uint40"
              }
            ]
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_uint40": {
            "label": "uint40"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_contract(IERC20)3922": {
            "label": "contract IERC20"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "49bc2e186687c92a6e6c378a98fa6aa82cb051bf09735a4dbe4df6160ec27ccf": {
      "address": "0x6883C51C6654F8f6B7fCb3C8E6604F1afcB2Ab97",
      "txHash": "0x711191876fd97dcc05e029ef73189b63c7422c0098088cf3ee1a7024f3eb8932",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:51"
          },
          {
            "contract": "NOVO",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:52"
          },
          {
            "contract": "NOVO",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoToken.sol:53"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:54"
          },
          {
            "contract": "NOVO",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:55"
          },
          {
            "contract": "NOVO",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:56"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromAntiWhale",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:57"
          },
          {
            "contract": "NOVO",
            "label": "_accountsTier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:58"
          },
          {
            "contract": "NOVO",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:60"
          },
          {
            "contract": "NOVO",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:63"
          },
          {
            "contract": "NOVO",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:64"
          },
          {
            "contract": "NOVO",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:65"
          },
          {
            "contract": "NOVO",
            "label": "_maxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:66"
          },
          {
            "contract": "NOVO",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:67"
          },
          {
            "contract": "NOVO",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:69"
          },
          {
            "contract": "NOVO",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:70"
          },
          {
            "contract": "NOVO",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoToken.sol:71"
          },
          {
            "contract": "NOVO",
            "label": "_defaultFees",
            "type": "t_struct(FeeTier)5458_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:73"
          },
          {
            "contract": "NOVO",
            "label": "_previousFees",
            "type": "t_struct(FeeTier)5458_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:74"
          },
          {
            "contract": "NOVO",
            "label": "_emptyFees",
            "type": "t_struct(FeeTier)5458_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:75"
          },
          {
            "contract": "NOVO",
            "label": "feeTiers",
            "type": "t_array(t_struct(FeeTier)5458_storage)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:77"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3396",
            "src": "..\\project:\\contracts\\NovoToken.sol:79"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:80"
          },
          {
            "contract": "NOVO",
            "label": "WBNB",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:81"
          },
          {
            "contract": "NOVO",
            "label": "migration",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:82"
          },
          {
            "contract": "NOVO",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:83"
          },
          {
            "contract": "NOVO",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:84"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:85"
          },
          {
            "contract": "NOVO",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:86"
          },
          {
            "contract": "NOVO",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:88"
          },
          {
            "contract": "NOVO",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:89"
          },
          {
            "contract": "NOVO",
            "label": "antiWhaleEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:90"
          },
          {
            "contract": "NOVO",
            "label": "_antiWhaleAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:92"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:93"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:94"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:95"
          },
          {
            "contract": "NOVO",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:97"
          },
          {
            "contract": "NOVO",
            "label": "canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:98"
          },
          {
            "contract": "NOVO",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:99"
          },
          {
            "contract": "NOVO",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:101"
          },
          {
            "contract": "NOVO",
            "label": "_novoNFT",
            "type": "t_contract(NovoNFT)4411",
            "src": "..\\project:\\contracts\\NovoToken.sol:103"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(FeeTier)5458_storage": {
            "label": "struct NOVO.FeeTier",
            "members": [
              {
                "label": "ecoSystemFee",
                "type": "t_uint256"
              },
              {
                "label": "liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "taxFee",
                "type": "t_uint256"
              },
              {
                "label": "stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "burnFee",
                "type": "t_uint256"
              },
              {
                "label": "ecoSystem",
                "type": "t_address"
              },
              {
                "label": "stakingPool",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(FeeTier)5458_storage)dyn_storage": {
            "label": "struct NOVO.FeeTier[]"
          },
          "t_contract(IUniswapV2Router02)3396": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(NovoNFT)4411": {
            "label": "contract NovoNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1a7637abdc01beb84241233225967e27641b216620ce30e774ae6e496c89817d": {
      "address": "0x60D220D31AbDAd735CCB62b8Ecd10551e84540d5",
      "txHash": "0x1373a3d6dbe2d26e546a35acc3732dd8b0e0353a9d55d415f0babc6e519ffbdb",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a41b1fe2f90946e93a810f0e3422da630d800b5a44c6326d70cbd2b25e894b90": {
      "address": "0xEC79F308585FDc8b27A9Bb77B1F586d82c2a887b",
      "txHash": "0xa7839ac7b76945a2db87883b5508e0c5592ec0239b6d4bca86a68c09999e2329",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5c6d595dc25566dbf24f592a94868781c209cc937285dd233b6bee9f3b175da7": {
      "address": "0x3B3a1B33D688e4Ed22a2Ba12cE9e9228d89BF33e",
      "txHash": "0xdebf9721bf410c1380d2a3f34de11bb6c8d4d547769c183a61989fb74d95dfe6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "00a157b41a6434dc8be609b58f24b90ea19ba3f0c99c4099e79cb3742c07f4eb": {
      "address": "0x8Bc97704e71C89633136D48Ae249302AF2998A73",
      "txHash": "0x9081cef3321777a62dd5428fbb18977397160c29ff03c2dfca6f6843ca564f43",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b5203bdb12733ce2fca221370c949418588c6464c99d7c0717f4a252f8e26567": {
      "address": "0x1C21e6a2b3Ebe298Dab6a6307Df3d778e917A8FA",
      "txHash": "0x7195c2bfcfd324ea82a513fc254ec834d26426494088c993076996ac4b31bbb4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:51"
          },
          {
            "contract": "NOVO",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:52"
          },
          {
            "contract": "NOVO",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoToken.sol:53"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:54"
          },
          {
            "contract": "NOVO",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:55"
          },
          {
            "contract": "NOVO",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:56"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromAntiWhale",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:57"
          },
          {
            "contract": "NOVO",
            "label": "_accountsTier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:58"
          },
          {
            "contract": "NOVO",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:60"
          },
          {
            "contract": "NOVO",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:63"
          },
          {
            "contract": "NOVO",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:64"
          },
          {
            "contract": "NOVO",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:65"
          },
          {
            "contract": "NOVO",
            "label": "_maxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:66"
          },
          {
            "contract": "NOVO",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:67"
          },
          {
            "contract": "NOVO",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:69"
          },
          {
            "contract": "NOVO",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:70"
          },
          {
            "contract": "NOVO",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoToken.sol:71"
          },
          {
            "contract": "NOVO",
            "label": "_defaultFees",
            "type": "t_struct(FeeTier)5408_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:73"
          },
          {
            "contract": "NOVO",
            "label": "_previousFees",
            "type": "t_struct(FeeTier)5408_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:74"
          },
          {
            "contract": "NOVO",
            "label": "_emptyFees",
            "type": "t_struct(FeeTier)5408_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:75"
          },
          {
            "contract": "NOVO",
            "label": "feeTiers",
            "type": "t_array(t_struct(FeeTier)5408_storage)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:77"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3396",
            "src": "..\\project:\\contracts\\NovoToken.sol:79"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:80"
          },
          {
            "contract": "NOVO",
            "label": "WBNB",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:81"
          },
          {
            "contract": "NOVO",
            "label": "migration",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:82"
          },
          {
            "contract": "NOVO",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:83"
          },
          {
            "contract": "NOVO",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:84"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:85"
          },
          {
            "contract": "NOVO",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:86"
          },
          {
            "contract": "NOVO",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:88"
          },
          {
            "contract": "NOVO",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:89"
          },
          {
            "contract": "NOVO",
            "label": "antiWhaleEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:90"
          },
          {
            "contract": "NOVO",
            "label": "_antiWhaleAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:92"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:93"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:94"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:95"
          },
          {
            "contract": "NOVO",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:97"
          },
          {
            "contract": "NOVO",
            "label": "canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:98"
          },
          {
            "contract": "NOVO",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:99"
          },
          {
            "contract": "NOVO",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:101"
          },
          {
            "contract": "NOVO",
            "label": "_novoNFT",
            "type": "t_contract(NovoNFT)4361",
            "src": "..\\project:\\contracts\\NovoToken.sol:103"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(FeeTier)5408_storage": {
            "label": "struct NOVO.FeeTier",
            "members": [
              {
                "label": "ecoSystemFee",
                "type": "t_uint256"
              },
              {
                "label": "liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "taxFee",
                "type": "t_uint256"
              },
              {
                "label": "stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "burnFee",
                "type": "t_uint256"
              },
              {
                "label": "ecoSystem",
                "type": "t_address"
              },
              {
                "label": "stakingPool",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(FeeTier)5408_storage)dyn_storage": {
            "label": "struct NOVO.FeeTier[]"
          },
          "t_contract(IUniswapV2Router02)3396": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(NovoNFT)4361": {
            "label": "contract NovoNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b5741cafc6c346ce0942d0a7c5a9722033524f19d9b32c790e838af1f4a3f5d2": {
      "address": "0x8c12DDa5AdDdB272BEc77C70a8F32331dAE9F6F3",
      "txHash": "0x2f81d6ede3819da2110108c9f5bd96056ed2c04d05621e78dadcdb4e96f1180d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "a16dbba26a9d328eebf0fc5e2691d2223f71b3d74fda07698fceb08f4f25b71a": {
      "address": "0x99C850c03CBc3D36013627EFCF451aAE0Bb0863e",
      "txHash": "0x16fd7993ca2b63e0b29738037f76cbb4152a6bb313849d06900fd63bf15e65c5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:51"
          },
          {
            "contract": "NOVO",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:52"
          },
          {
            "contract": "NOVO",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoToken.sol:53"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:54"
          },
          {
            "contract": "NOVO",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:55"
          },
          {
            "contract": "NOVO",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:56"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromAntiWhale",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:57"
          },
          {
            "contract": "NOVO",
            "label": "_accountsTier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:58"
          },
          {
            "contract": "NOVO",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:60"
          },
          {
            "contract": "NOVO",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:63"
          },
          {
            "contract": "NOVO",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:64"
          },
          {
            "contract": "NOVO",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:65"
          },
          {
            "contract": "NOVO",
            "label": "_maxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:66"
          },
          {
            "contract": "NOVO",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:67"
          },
          {
            "contract": "NOVO",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:69"
          },
          {
            "contract": "NOVO",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:70"
          },
          {
            "contract": "NOVO",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoToken.sol:71"
          },
          {
            "contract": "NOVO",
            "label": "_defaultFees",
            "type": "t_struct(FeeTier)5409_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:73"
          },
          {
            "contract": "NOVO",
            "label": "_previousFees",
            "type": "t_struct(FeeTier)5409_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:74"
          },
          {
            "contract": "NOVO",
            "label": "_emptyFees",
            "type": "t_struct(FeeTier)5409_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:75"
          },
          {
            "contract": "NOVO",
            "label": "feeTiers",
            "type": "t_array(t_struct(FeeTier)5409_storage)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:77"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3396",
            "src": "..\\project:\\contracts\\NovoToken.sol:79"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:80"
          },
          {
            "contract": "NOVO",
            "label": "WBNB",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:81"
          },
          {
            "contract": "NOVO",
            "label": "migration",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:82"
          },
          {
            "contract": "NOVO",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:83"
          },
          {
            "contract": "NOVO",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:84"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:85"
          },
          {
            "contract": "NOVO",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:86"
          },
          {
            "contract": "NOVO",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:88"
          },
          {
            "contract": "NOVO",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:89"
          },
          {
            "contract": "NOVO",
            "label": "antiWhaleEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:90"
          },
          {
            "contract": "NOVO",
            "label": "_antiWhaleAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:92"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:93"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:94"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:95"
          },
          {
            "contract": "NOVO",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:97"
          },
          {
            "contract": "NOVO",
            "label": "canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:98"
          },
          {
            "contract": "NOVO",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:99"
          },
          {
            "contract": "NOVO",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:101"
          },
          {
            "contract": "NOVO",
            "label": "_novoNFT",
            "type": "t_contract(NovoNFT)4362",
            "src": "..\\project:\\contracts\\NovoToken.sol:103"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(FeeTier)5409_storage": {
            "label": "struct NOVO.FeeTier",
            "members": [
              {
                "label": "ecoSystemFee",
                "type": "t_uint256"
              },
              {
                "label": "liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "taxFee",
                "type": "t_uint256"
              },
              {
                "label": "stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "burnFee",
                "type": "t_uint256"
              },
              {
                "label": "ecoSystem",
                "type": "t_address"
              },
              {
                "label": "stakingPool",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(FeeTier)5409_storage)dyn_storage": {
            "label": "struct NOVO.FeeTier[]"
          },
          "t_contract(IUniswapV2Router02)3396": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(NovoNFT)4362": {
            "label": "contract NovoNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4ab3d993bd8ba4382473bac81eb9e9054780b0f9f8a2b87c508a3a3939f9b697": {
      "address": "0x58B2544C5975013eAE19202972C02f5f4fDB07BB",
      "txHash": "0x1b101ede7a240814fc76c6a15e2c036ce6c295483034859da6159c872f1e6ffa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "857e902e583c00a6c2d3db538058a536135b6a43de19d73dd8dca45b9c49612f": {
      "address": "0x5abFb5B5F6d4B5F66c2680f9dD3AB3cD1e1e997D",
      "txHash": "0x9ed2fccaea4b3ecc89b1c2b98273d428fc93ae2f1b67cdaecd0e28c9ebbb1554",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d0939b5d5be3c248fdcb0e16284ad0cc35887f0610eedf453e704fcd313ca082": {
      "address": "0x1a4225cFBBDC49A4BAa2a1A0151c55cD38Cc64E9",
      "txHash": "0x423a8295292b31799cf8f29ff6593d6fb1f0144f84e974c8a664f40ac91b0902",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "303be1474c6ba8d4fa08df5d44bbc45695215392f5e0c65ca4609b7bb3cde762": {
      "address": "0x515E003E202669A17Cb1A7123d798B441a41De30",
      "txHash": "0x0c37ee488d2fb3ab6bc6eae28e8e1d32fa905eae7ef14a1b319d6a886f762ed2",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:51"
          },
          {
            "contract": "NOVO",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:52"
          },
          {
            "contract": "NOVO",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoToken.sol:53"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:54"
          },
          {
            "contract": "NOVO",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:55"
          },
          {
            "contract": "NOVO",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:56"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromAntiWhale",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:57"
          },
          {
            "contract": "NOVO",
            "label": "_accountsTier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:58"
          },
          {
            "contract": "NOVO",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:60"
          },
          {
            "contract": "NOVO",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:63"
          },
          {
            "contract": "NOVO",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:64"
          },
          {
            "contract": "NOVO",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:65"
          },
          {
            "contract": "NOVO",
            "label": "_maxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:66"
          },
          {
            "contract": "NOVO",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:67"
          },
          {
            "contract": "NOVO",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:69"
          },
          {
            "contract": "NOVO",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:70"
          },
          {
            "contract": "NOVO",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoToken.sol:71"
          },
          {
            "contract": "NOVO",
            "label": "_defaultFees",
            "type": "t_struct(FeeTier)5409_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:73"
          },
          {
            "contract": "NOVO",
            "label": "_previousFees",
            "type": "t_struct(FeeTier)5409_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:74"
          },
          {
            "contract": "NOVO",
            "label": "_emptyFees",
            "type": "t_struct(FeeTier)5409_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:75"
          },
          {
            "contract": "NOVO",
            "label": "feeTiers",
            "type": "t_array(t_struct(FeeTier)5409_storage)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:77"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3396",
            "src": "..\\project:\\contracts\\NovoToken.sol:79"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:80"
          },
          {
            "contract": "NOVO",
            "label": "WBNB",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:81"
          },
          {
            "contract": "NOVO",
            "label": "migration",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:82"
          },
          {
            "contract": "NOVO",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:83"
          },
          {
            "contract": "NOVO",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:84"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:85"
          },
          {
            "contract": "NOVO",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:86"
          },
          {
            "contract": "NOVO",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:88"
          },
          {
            "contract": "NOVO",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:89"
          },
          {
            "contract": "NOVO",
            "label": "antiWhaleEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:90"
          },
          {
            "contract": "NOVO",
            "label": "_antiWhaleAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:92"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:93"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:94"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:95"
          },
          {
            "contract": "NOVO",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:97"
          },
          {
            "contract": "NOVO",
            "label": "canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:98"
          },
          {
            "contract": "NOVO",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:99"
          },
          {
            "contract": "NOVO",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:101"
          },
          {
            "contract": "NOVO",
            "label": "_novoNFT",
            "type": "t_contract(NovoNFT)4362",
            "src": "..\\project:\\contracts\\NovoToken.sol:103"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(FeeTier)5409_storage": {
            "label": "struct NOVO.FeeTier",
            "members": [
              {
                "label": "ecoSystemFee",
                "type": "t_uint256"
              },
              {
                "label": "liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "taxFee",
                "type": "t_uint256"
              },
              {
                "label": "stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "burnFee",
                "type": "t_uint256"
              },
              {
                "label": "ecoSystem",
                "type": "t_address"
              },
              {
                "label": "stakingPool",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(FeeTier)5409_storage)dyn_storage": {
            "label": "struct NOVO.FeeTier[]"
          },
          "t_contract(IUniswapV2Router02)3396": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(NovoNFT)4362": {
            "label": "contract NovoNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0c018e62f4d48ce04ba91b4f3967b6d7c54906c36e34cf3df00d7bc257aaf85f": {
      "address": "0x1DfE0051589cf08B1D087E84b7a23C44e764F754",
      "txHash": "0x9465f29901bc7291a23b569b9c26c883aeda8ceb96bc3236a3bd955a7d935ca4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7c21bbe74e7438827e7cf8b2d9c0ea43a45198da17fb25cb1f2786315ac105eb": {
      "address": "0x106Aa0fD1EB62D4CA694C2208f4EC073f2fB9090",
      "txHash": "0x3cc27a8448ac0206bb8c10f63c0978363c04c868d9e38f6f21f480b92503b893",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "20876103a9370ca8321ae1df4247938fc094af4f4deb32c521f8c6c713f52ad8": {
      "address": "0x1fd5bA155d9de7C48ecE085F7fA061F0870719c9",
      "txHash": "0xda878dba19bbcf3cce66f5a554f1606834c73691c803d8d525a2870bda269dc6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c5f5919432afe654ea16b08ab81eed87d245c457d33db3f01f89ae1280687509": {
      "address": "0x91A5f8BCB2c4686063d2edE53396082eBAdc18aB",
      "txHash": "0xad9cdeb3728dc2a8fe34e199bcbfa67961c616fbe7b629dff1b7eb05b0b315f9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6e95b064d96c4489bce543a700900e79c3e04acb2c3fe546e0abc746b2edcb61": {
      "address": "0x07638d6Ee8Bf29faE3a2F4c4648Ec93c3f558941",
      "txHash": "0x203abaddb8e4fb7fd4073da327849d2e8f21908a71cbf684bc9a7dd339ddc12e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "42c811e6bd40412a0e41f542914520d7d59b7ded9e5e5095d83f38a67e06aad0": {
      "address": "0xAeF8Fc971578181aF684C8a87d96AEfaaBee6ce8",
      "txHash": "0xc398fbd64950e9164b7021e45bd46e3baf649af4a56c9e9a2dfdf96eec1c785f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "8e1c10ae8c6e3680da90ff5c3acb077e8be8109b3da874e2fd51ccabc6c94603": {
      "address": "0x8482C3687A98e9433Eac0fd952B65523D058D73A",
      "txHash": "0x230d8a561a3e9d8b2621a3722e42c21cdcc5f351fe9ebdeb1153fd1b82c8a7d6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "27a45bc0c82f125acfdc092218d1b21f6113e53d3963cd4895c9b17ea22b135a": {
      "address": "0x03A88140E161E4a2b4677E4a2E7C79Be16FD5270",
      "txHash": "0x3d63669001715a850e3f709740bd0c10a4e6258156516b082e0aef7d2ecbb29d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9e8591017348799723667b326f7b098340da406cb4ace0e0e8ffd3ec24ad9ded": {
      "address": "0x2EDe850CB4B36E7D6f9cBB25DEd2453E121D3Bd6",
      "txHash": "0x5efba2e6211c2b9f1c3c8b87bf5ca0ab1792d7c5bcd46452c74aac6c3a35d909",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "efc2bb5b5c9bbf76de6f0e877b2873ee0ef9053a2c5ad4d94c6f0d96c7473ca3": {
      "address": "0x05FA3E8FF83e821de6Aa0cbbEeAB599Ce7aee7f6",
      "txHash": "0xb93840bfb74d2abfada9cf723133c7e7a2bcc56c73216366e716c9bc059f4f84",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5aaa21364cbb5c8ef58df7020801680a97820bc52be8976a30ec804940c5406e": {
      "address": "0x67414543bd5090be47CdD9f6ABDCAcf0009caFF3",
      "txHash": "0xb4aba9ce071411796624b009a461404eb0704eb4c49c71e731ee018798fe2afd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "ee5a021abe91bcaf4663ae363c1f466229894ee0f79b95aa0bea59f0b405598b": {
      "address": "0xEa884c02BCb795bf6A230C8e041c8bce8eA86d39",
      "txHash": "0x72943054848a996e4e6dc010490fba3891a98c9a1a8f5f4d1aeb2197d6949700",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c74e80699b62ecc5a2f121503a3961cba776b652df3cccea31670f3d83365a7d": {
      "address": "0x3a30a6c034d418a7bC41a942D1bC72B84a4bF6b7",
      "txHash": "0xb084f50691aba57d1f7750724935dd68534889c5e4ec6541d4559e2ac26886ab",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "6afa0bb1ff4ccfc3c22a5a5fd24ffbb127b61f065b4f9cb2296c93e70973fb42": {
      "address": "0xaf123635093786d6b58aaaAADB5920B719Ef41DE",
      "txHash": "0x732f0ffde24a13f500590077e090b9a05e92e0e517a3ae0f7d67b3e1c555b061",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4468d386d0831457036e5987a2c0b6dbf54d9d8df769b82448df659f3a1500d7": {
      "address": "0xb4b0CC3cb27B802F5172903FD78024c7d0b2ebc2",
      "txHash": "0x3c19bcc9459a7594444a01489582a6ab7bb1342449bc213c41fe37d89fdc713a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "0d05b687999d0f6cfe3744c6fc3d30c4fcdd7cf9515385f2b006e94f411d53e6": {
      "address": "0x84A68661A982E899C56B8D6e8bbaAA2Fda00e934",
      "txHash": "0xbbc3e7c66e2bb6d2eb5ceffb093799509c183dd2b221aea8a9fd03101abd091a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "63755fb17faca1564ee29c33fdce4fba44b5a61c1d85fcff70ee6476730c8ac5": {
      "address": "0x22dEE9646b3A689786DA86F48A6b7eC872853235",
      "txHash": "0x5ef75c28f4dff3cbb928b3661d635f7ce04cef2f076b75fd1c446f2ab3b28a3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:51"
          },
          {
            "contract": "NOVO",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:52"
          },
          {
            "contract": "NOVO",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoToken.sol:53"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:54"
          },
          {
            "contract": "NOVO",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:55"
          },
          {
            "contract": "NOVO",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:56"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromAntiWhale",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:57"
          },
          {
            "contract": "NOVO",
            "label": "_accountsTier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:58"
          },
          {
            "contract": "NOVO",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:60"
          },
          {
            "contract": "NOVO",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:63"
          },
          {
            "contract": "NOVO",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:64"
          },
          {
            "contract": "NOVO",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:65"
          },
          {
            "contract": "NOVO",
            "label": "_maxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:66"
          },
          {
            "contract": "NOVO",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:67"
          },
          {
            "contract": "NOVO",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:69"
          },
          {
            "contract": "NOVO",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:70"
          },
          {
            "contract": "NOVO",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoToken.sol:71"
          },
          {
            "contract": "NOVO",
            "label": "_defaultFees",
            "type": "t_struct(FeeTier)5723_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:73"
          },
          {
            "contract": "NOVO",
            "label": "_previousFees",
            "type": "t_struct(FeeTier)5723_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:74"
          },
          {
            "contract": "NOVO",
            "label": "_emptyFees",
            "type": "t_struct(FeeTier)5723_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:75"
          },
          {
            "contract": "NOVO",
            "label": "feeTiers",
            "type": "t_array(t_struct(FeeTier)5723_storage)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:77"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3396",
            "src": "..\\project:\\contracts\\NovoToken.sol:79"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:80"
          },
          {
            "contract": "NOVO",
            "label": "WBNB",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:81"
          },
          {
            "contract": "NOVO",
            "label": "migration",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:82"
          },
          {
            "contract": "NOVO",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:83"
          },
          {
            "contract": "NOVO",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:84"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:85"
          },
          {
            "contract": "NOVO",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:86"
          },
          {
            "contract": "NOVO",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:88"
          },
          {
            "contract": "NOVO",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:89"
          },
          {
            "contract": "NOVO",
            "label": "antiWhaleEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:90"
          },
          {
            "contract": "NOVO",
            "label": "_antiWhaleAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:92"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:93"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:94"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:95"
          },
          {
            "contract": "NOVO",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:97"
          },
          {
            "contract": "NOVO",
            "label": "canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:98"
          },
          {
            "contract": "NOVO",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:99"
          },
          {
            "contract": "NOVO",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:101"
          },
          {
            "contract": "NOVO",
            "label": "_novoNFT",
            "type": "t_contract(NovoNFT)4676",
            "src": "..\\project:\\contracts\\NovoToken.sol:103"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(FeeTier)5723_storage": {
            "label": "struct NOVO.FeeTier",
            "members": [
              {
                "label": "ecoSystemFee",
                "type": "t_uint256"
              },
              {
                "label": "liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "taxFee",
                "type": "t_uint256"
              },
              {
                "label": "stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "burnFee",
                "type": "t_uint256"
              },
              {
                "label": "ecoSystem",
                "type": "t_address"
              },
              {
                "label": "stakingPool",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(FeeTier)5723_storage)dyn_storage": {
            "label": "struct NOVO.FeeTier[]"
          },
          "t_contract(IUniswapV2Router02)3396": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(NovoNFT)4676": {
            "label": "contract NovoNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "44cf517bf7ccffa0c49e2f6a21bb404c5434069922e08b61f53734f6c0a5e793": {
      "address": "0x2F9965fEf07eE485979889839b6394827D1455e5",
      "txHash": "0xd2707aa5537ed1ab35b20597161f4923df07f803c188c006c3570c8a291b5e70",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c12e8aa39df829b988ad179b899a0977e0cde9df9466fc79807e14b5fff3d08": {
      "address": "0x6e21Eaf5D4FCE1dc2Db9a198dC6217C072e6424f",
      "txHash": "0x10f7e8f892318e7f7c0941fd2849001868d61e50ba5a5dde1208372c0c9f6010",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:51"
          },
          {
            "contract": "NOVO",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:52"
          },
          {
            "contract": "NOVO",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoToken.sol:53"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:54"
          },
          {
            "contract": "NOVO",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:55"
          },
          {
            "contract": "NOVO",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:56"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromAntiWhale",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:57"
          },
          {
            "contract": "NOVO",
            "label": "_accountsTier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:58"
          },
          {
            "contract": "NOVO",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:60"
          },
          {
            "contract": "NOVO",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:63"
          },
          {
            "contract": "NOVO",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:64"
          },
          {
            "contract": "NOVO",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:65"
          },
          {
            "contract": "NOVO",
            "label": "_maxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:66"
          },
          {
            "contract": "NOVO",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:67"
          },
          {
            "contract": "NOVO",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:69"
          },
          {
            "contract": "NOVO",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:70"
          },
          {
            "contract": "NOVO",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoToken.sol:71"
          },
          {
            "contract": "NOVO",
            "label": "_defaultFees",
            "type": "t_struct(FeeTier)5723_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:73"
          },
          {
            "contract": "NOVO",
            "label": "_previousFees",
            "type": "t_struct(FeeTier)5723_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:74"
          },
          {
            "contract": "NOVO",
            "label": "_emptyFees",
            "type": "t_struct(FeeTier)5723_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:75"
          },
          {
            "contract": "NOVO",
            "label": "feeTiers",
            "type": "t_array(t_struct(FeeTier)5723_storage)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:77"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3396",
            "src": "..\\project:\\contracts\\NovoToken.sol:79"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:80"
          },
          {
            "contract": "NOVO",
            "label": "WBNB",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:81"
          },
          {
            "contract": "NOVO",
            "label": "migration",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:82"
          },
          {
            "contract": "NOVO",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:83"
          },
          {
            "contract": "NOVO",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:84"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:85"
          },
          {
            "contract": "NOVO",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:86"
          },
          {
            "contract": "NOVO",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:88"
          },
          {
            "contract": "NOVO",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:89"
          },
          {
            "contract": "NOVO",
            "label": "antiWhaleEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:90"
          },
          {
            "contract": "NOVO",
            "label": "_antiWhaleAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:92"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:93"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:94"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:95"
          },
          {
            "contract": "NOVO",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:97"
          },
          {
            "contract": "NOVO",
            "label": "canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:98"
          },
          {
            "contract": "NOVO",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:99"
          },
          {
            "contract": "NOVO",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:101"
          },
          {
            "contract": "NOVO",
            "label": "_novoNFT",
            "type": "t_contract(NovoNFT)4676",
            "src": "..\\project:\\contracts\\NovoToken.sol:103"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(FeeTier)5723_storage": {
            "label": "struct NOVO.FeeTier",
            "members": [
              {
                "label": "ecoSystemFee",
                "type": "t_uint256"
              },
              {
                "label": "liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "taxFee",
                "type": "t_uint256"
              },
              {
                "label": "stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "burnFee",
                "type": "t_uint256"
              },
              {
                "label": "ecoSystem",
                "type": "t_address"
              },
              {
                "label": "stakingPool",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(FeeTier)5723_storage)dyn_storage": {
            "label": "struct NOVO.FeeTier[]"
          },
          "t_contract(IUniswapV2Router02)3396": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(NovoNFT)4676": {
            "label": "contract NovoNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c9015dc387cfe70c854c8dac810db08aee829b89f605f59f052ceaac66b6c40b": {
      "address": "0xF97652F404912D4Fa2C4D12DfBc741891181AC95",
      "txHash": "0x8c2a4be8ea2119bcbd584bfd3eae993854061cdb6aeee0a64bf405c784262d1d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:50"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c2d1314a95d39211255df45dd10e1b5e87cd6a406b38861e678eac47b443dce7": {
      "address": "0xe98D852fa81a23cA91c6EA4e2a12cB07F993269A",
      "txHash": "0x9c046426f43bb8ddd97c992e25828e85b50cf4ef388d45e80290a3695b80eace",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVO",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:51"
          },
          {
            "contract": "NOVO",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:52"
          },
          {
            "contract": "NOVO",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoToken.sol:53"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:54"
          },
          {
            "contract": "NOVO",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:55"
          },
          {
            "contract": "NOVO",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:56"
          },
          {
            "contract": "NOVO",
            "label": "_isExcludedFromAntiWhale",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoToken.sol:57"
          },
          {
            "contract": "NOVO",
            "label": "_accountsTier",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoToken.sol:58"
          },
          {
            "contract": "NOVO",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:60"
          },
          {
            "contract": "NOVO",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:63"
          },
          {
            "contract": "NOVO",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:64"
          },
          {
            "contract": "NOVO",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:65"
          },
          {
            "contract": "NOVO",
            "label": "_maxFee",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:66"
          },
          {
            "contract": "NOVO",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:67"
          },
          {
            "contract": "NOVO",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:69"
          },
          {
            "contract": "NOVO",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:70"
          },
          {
            "contract": "NOVO",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoToken.sol:71"
          },
          {
            "contract": "NOVO",
            "label": "_defaultFees",
            "type": "t_struct(FeeTier)5711_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:73"
          },
          {
            "contract": "NOVO",
            "label": "_previousFees",
            "type": "t_struct(FeeTier)5711_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:74"
          },
          {
            "contract": "NOVO",
            "label": "_emptyFees",
            "type": "t_struct(FeeTier)5711_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:75"
          },
          {
            "contract": "NOVO",
            "label": "feeTiers",
            "type": "t_array(t_struct(FeeTier)5711_storage)dyn_storage",
            "src": "..\\project:\\contracts\\NovoToken.sol:77"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3396",
            "src": "..\\project:\\contracts\\NovoToken.sol:79"
          },
          {
            "contract": "NOVO",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:80"
          },
          {
            "contract": "NOVO",
            "label": "WBNB",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:81"
          },
          {
            "contract": "NOVO",
            "label": "migration",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:82"
          },
          {
            "contract": "NOVO",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:83"
          },
          {
            "contract": "NOVO",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:84"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:85"
          },
          {
            "contract": "NOVO",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoToken.sol:86"
          },
          {
            "contract": "NOVO",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:88"
          },
          {
            "contract": "NOVO",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:89"
          },
          {
            "contract": "NOVO",
            "label": "antiWhaleEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:90"
          },
          {
            "contract": "NOVO",
            "label": "_antiWhaleAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:92"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:93"
          },
          {
            "contract": "NOVO",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:94"
          },
          {
            "contract": "NOVO",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:95"
          },
          {
            "contract": "NOVO",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:97"
          },
          {
            "contract": "NOVO",
            "label": "canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:98"
          },
          {
            "contract": "NOVO",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoToken.sol:99"
          },
          {
            "contract": "NOVO",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoToken.sol:101"
          },
          {
            "contract": "NOVO",
            "label": "_novoNFT",
            "type": "t_contract(NovoNFT)4664",
            "src": "..\\project:\\contracts\\NovoToken.sol:103"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(FeeTier)5711_storage": {
            "label": "struct NOVO.FeeTier",
            "members": [
              {
                "label": "ecoSystemFee",
                "type": "t_uint256"
              },
              {
                "label": "liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "taxFee",
                "type": "t_uint256"
              },
              {
                "label": "stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "burnFee",
                "type": "t_uint256"
              },
              {
                "label": "ecoSystem",
                "type": "t_address"
              },
              {
                "label": "stakingPool",
                "type": "t_address"
              }
            ]
          },
          "t_array(t_struct(FeeTier)5711_storage)dyn_storage": {
            "label": "struct NOVO.FeeTier[]"
          },
          "t_contract(IUniswapV2Router02)3396": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(NovoNFT)4664": {
            "label": "contract NovoNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "df5c1265eb4c354529ccc35cd2cb8db5e0d11d02f3933ebb5f0325fd74e270f0": {
      "address": "0x9929AeC6eFf3685624A5944bF704AEd0cc7CC842",
      "txHash": "0x3cdc3de7ae00ef7b79c610fc2036e6dbe880f4e9f68c4816ce350287265f876e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:30"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:31"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3430_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:37"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:38"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:46"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:49"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:50"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3430_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3430_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9321a000065406efe03e3673251587d5fa8546628e0ec032d427887765004690": {
      "address": "0x0aA3D19124C99791bfF363ae24C95ECb5E4Db12F",
      "txHash": "0xc15e871b8cad72c0a4c6b1392f2244ed3435a1cb0f128e7a283bb0962f2f37e8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "68dd5cee11b76e546cf22ec935f9dab3de3634710196bf7b7a2d5dcf6d4ae676": {
      "address": "0x445678631b71bE622cB375fb77B9eD817700F577",
      "txHash": "0x483c6a6340291606feba005e53cb5ff1bd38bc909109b0754bd2b71661cf4d28",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "5c90c38452437f8976403b0280138b921274bc55664fd60d8b67283f508b36c0": {
      "address": "0x2ebC719B1fD4D9d8C95D15a8a1E70C6d80FBa93E",
      "txHash": "0x24586208534285a673d28110669abcb2751cec10c46b66607ffc04ba479c2cec",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "244c49756b8bbbf43e5e1cd2c5febb398a1a4045b3f85403bd7c9acd438c86f0": {
      "address": "0xF7801c4fC8D754482a02Da99f0D16b5bDac44bA1",
      "txHash": "0xaa6a3b16b3de31951743268580954fc643fd19c837aa9591139a4621a60794fa",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "fe7b0ddc076bfe649ac81800b55ed763f3f3653dd02f41961e586e5ba025f58c": {
      "address": "0x1d3Cb69026E86B5E1Ca8ee36D11dfFC689c099A5",
      "txHash": "0x95a5b5d10f6e68cc06debee8bd2f93eb715679d83b82e6355bec01406d14159c",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "46affb98bc0533d7d03b4d0575f4e7865ca13eb1c33917ab16dbff7618fe9a1a": {
      "address": "0x91ED68d43367930860fe118cb9e5CCc5B2D20fdC",
      "txHash": "0x5f93cd845c4347f806045fd557dd79a53b48dc5ef275bd0a9125c87eefa9ad90",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "93424ee06d48be61edd0046d646c677d279bd67c09dda57d5f62c7d28073eb7b": {
      "address": "0x8D8182b1c507543c1baa08215088Bb5c19484277",
      "txHash": "0x3adcd4fd22435b5e2a86821c1f1c36ee498c665b279c3292ef35cde7b032bc7f",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "810548761f7a0e66e594281678c27514a5b3acb40855629badae27be1ea6e4be": {
      "address": "0xaC48c6566495d49592d769e5F84C171f409b9F37",
      "txHash": "0xc4f286a02b3cac9eb27f02a8512e8cf08b5257ad72869920ee1330484a949a9b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4c8866c9a63c7088205c4ec30cc487d0513e734645420a4bab15b38995ec9ef1": {
      "address": "0x573ecB24D6C4F8636c38eCa8143429F858408445",
      "txHash": "0x8ac1aaf7faff054d246690b3ee16ec670ef734eb5a32ce28c5648e43ac6fe65a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "c41643c7673b4b5f395ce4b20075b3265db679eec9a1a1cac6d0670263332219": {
      "address": "0x96E9e33b7E22F984dddAA64F754340341EC77b09",
      "txHash": "0x389d834195cb2ce5faaec847643cfbbc2a434af017fdde0d209d79021875e65e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "4697aa054bc8a38e3b6f0fd7e072f8f1baf4956aac3da4889726c2ca92d544d9": {
      "address": "0x178fc151716805A9582FDA22754314d0013DD1A0",
      "txHash": "0xfe2d02ca36e3b2c3e122ec135fae0b8025a5d9e8e3e09b6c65e58abb77ddd3d1",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "23f7700ffe9613d892f21a6cddbdc13e214e66bf51c8415766c42acc4686e897": {
      "address": "0x8ec5677985abAB3F59F2929c2Ea59B378bdb4521",
      "txHash": "0x1aaf7d0fb356919d219f9f36a83cd84d03454988a94c0572da4047972d38cc95",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "1d8b46388cb2d603a1a18ccfa038244b5ef90d8e4ce18dfce941ab3a0fb67125": {
      "address": "0x9826b169516CeB6a518CF3F0569BC5216B1Bc986",
      "txHash": "0x79b683dba6c22efe67d927ad7f372aa8bbfd87a386d30cd248538fc3e5c444ae",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "7bce708790d08ac453548f6c4bd90a61b6ef82933fd1809d05cd3bf8ba889ae5": {
      "address": "0x50b2e2869dbD9F84A7177cd5ee9a34a8227a861D",
      "txHash": "0x79c3643182ae0f0f0b74d6d1c01a14688e00ffc831e31e579a31974845bb1f3e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d8de1e3ea49418d68818e97b5bb250d3ab60aabf4b3c26336336ba720070d71b": {
      "address": "0x642A5ebd6E13e2De5C56ea917BbaEebA5EE202e5",
      "txHash": "0x58185a00e9d7394c25002eb5c4607f9016875329d8a701a47af824f24f19fed8",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "9bc7892ad166456b76f2d5b6489053178231b1ab494cb8247044a17463279b50": {
      "address": "0xe77eb0295a71Ee14E3C80CEDad654Ca498bF2483",
      "txHash": "0xf35a5899b61532f3797f5a6c9cb71ee7a47a99a36255d24379fad4d6e8704547",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "82d5df281ddd95f4c0e77663514c12d9e9ee38a24234b285dffda6667b7b6b75": {
      "address": "0xD5B94485822Ec409301Eb67F0f1d572572772B63",
      "txHash": "0x67436a96ee526fbcd655a69660115f128ffaecd098018e72aa162f419f4b910a",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "3056fd39f4445d3a8237e5203ff750e3ea1e71d2348cec5fbb25d00856aa74ed": {
      "address": "0x36e0231b08B6010cc970bc7BeA84e715545251Ee",
      "txHash": "0xbbdee63b4e35b2569b0c4b0dfb4beaef72dfa4f0deed92fa1c9a10b64e8a3bfd",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3434_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2695",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3434_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3434_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2695": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "b96f2452461074c71ac26f67bf7c1062886b3e375f6ec66f2fb06ed4a95e8a7c": {
      "address": "0x71E581FC286116967848D867aE3b207DC80C7792",
      "txHash": "0x0b9203fcac42e0ab4e0c3518944b0140e44b7f0273947e8d271e80789f07d020",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVOV2",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:40"
          },
          {
            "contract": "NOVOV2",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:42"
          },
          {
            "contract": "NOVOV2",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoStaking.sol:43"
          },
          {
            "contract": "NOVOV2",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:44"
          },
          {
            "contract": "NOVOV2",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:44"
          },
          {
            "contract": "NOVOV2",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:47"
          },
          {
            "contract": "NOVOV2",
            "label": "_isSwap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoStaking.sol:48"
          },
          {
            "contract": "NOVOV2",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:49"
          },
          {
            "contract": "NOVOV2",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:54"
          },
          {
            "contract": "NOVOV2",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:54"
          },
          {
            "contract": "NOVOV2",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:54"
          },
          {
            "contract": "NOVOV2",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:55"
          },
          {
            "contract": "NOVOV2",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:55"
          },
          {
            "contract": "NOVOV2",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:57"
          },
          {
            "contract": "NOVOV2",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoStaking.sol:57"
          },
          {
            "contract": "NOVOV2",
            "label": "_swapFee",
            "type": "t_struct(Fee)5015_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:57"
          },
          {
            "contract": "NOVOV2",
            "label": "_previousSwapFee",
            "type": "t_struct(Fee)5015_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:58"
          },
          {
            "contract": "NOVOV2",
            "label": "_transferFee",
            "type": "t_struct(Fee)5015_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:58"
          },
          {
            "contract": "NOVOV2",
            "label": "_previousTransferFee",
            "type": "t_struct(Fee)5015_storage",
            "src": "..\\project:\\contracts\\NovoStaking.sol:58"
          },
          {
            "contract": "NOVOV2",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3383",
            "src": "..\\project:\\contracts\\NovoStaking.sol:59"
          },
          {
            "contract": "NOVOV2",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoStaking.sol:60"
          },
          {
            "contract": "NOVOV2",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoStaking.sol:60"
          },
          {
            "contract": "NOVOV2",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoStaking.sol:62"
          },
          {
            "contract": "NOVOV2",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoStaking.sol:62"
          },
          {
            "contract": "NOVOV2",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoStaking.sol:62"
          },
          {
            "contract": "NOVOV2",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoStaking.sol:64"
          },
          {
            "contract": "NOVOV2",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoStaking.sol:64"
          },
          {
            "contract": "NOVOV2",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:65"
          },
          {
            "contract": "NOVOV2",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:65"
          },
          {
            "contract": "NOVOV2",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:67"
          },
          {
            "contract": "NOVOV2",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:67"
          },
          {
            "contract": "NOVOV2",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoStaking.sol:67"
          },
          {
            "contract": "NOVOV2",
            "label": "_canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoStaking.sol:67"
          },
          {
            "contract": "NOVOV2",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoStaking.sol:68"
          },
          {
            "contract": "NOVOV2",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoStaking.sol:69"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(Fee)5015_storage": {
            "label": "struct NOVOV2.Fee",
            "members": [
              {
                "label": "_stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "_liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "_burnFee",
                "type": "t_uint256"
              },
              {
                "label": "_treasuryFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IUniswapV2Router02)3383": {
            "label": "contract IUniswapV2Router02"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "12c38038b1d973d54bf8a69aed473301f91be4586031d9c7343c610d93496be6": {
      "address": "0xb206c706D31C6c3E8a7C4c37355b6B8AeAbC3620",
      "txHash": "0x49b814fc6257fdbc3d604a869ce9df3f7eda72fa7df42dfe8ace02158a7d4fa6",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVOV2",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:43"
          },
          {
            "contract": "NOVOV2",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:44"
          },
          {
            "contract": "NOVOV2",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:45"
          },
          {
            "contract": "NOVOV2",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:46"
          },
          {
            "contract": "NOVOV2",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:47"
          },
          {
            "contract": "NOVOV2",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:48"
          },
          {
            "contract": "NOVOV2",
            "label": "_isSwap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:49"
          },
          {
            "contract": "NOVOV2",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:51"
          },
          {
            "contract": "NOVOV2",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:54"
          },
          {
            "contract": "NOVOV2",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:55"
          },
          {
            "contract": "NOVOV2",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:56"
          },
          {
            "contract": "NOVOV2",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:57"
          },
          {
            "contract": "NOVOV2",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:59"
          },
          {
            "contract": "NOVOV2",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:60"
          },
          {
            "contract": "NOVOV2",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:61"
          },
          {
            "contract": "NOVOV2",
            "label": "_swapFee",
            "type": "t_struct(Fee)5027_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:63"
          },
          {
            "contract": "NOVOV2",
            "label": "_previousSwapFee",
            "type": "t_struct(Fee)5027_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:64"
          },
          {
            "contract": "NOVOV2",
            "label": "_transferFee",
            "type": "t_struct(Fee)5027_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:65"
          },
          {
            "contract": "NOVOV2",
            "label": "_previousTransferFee",
            "type": "t_struct(Fee)5027_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:66"
          },
          {
            "contract": "NOVOV2",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3395",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:68"
          },
          {
            "contract": "NOVOV2",
            "label": "_ncos",
            "type": "t_contract(NovoNFT)4992",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:69"
          },
          {
            "contract": "NOVOV2",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:70"
          },
          {
            "contract": "NOVOV2",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:71"
          },
          {
            "contract": "NOVOV2",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:72"
          },
          {
            "contract": "NOVOV2",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:73"
          },
          {
            "contract": "NOVOV2",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:74"
          },
          {
            "contract": "NOVOV2",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:76"
          },
          {
            "contract": "NOVOV2",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:77"
          },
          {
            "contract": "NOVOV2",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:79"
          },
          {
            "contract": "NOVOV2",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:80"
          },
          {
            "contract": "NOVOV2",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:81"
          },
          {
            "contract": "NOVOV2",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:82"
          },
          {
            "contract": "NOVOV2",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:84"
          },
          {
            "contract": "NOVOV2",
            "label": "_canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:85"
          },
          {
            "contract": "NOVOV2",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:86"
          },
          {
            "contract": "NOVOV2",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(Fee)5027_storage": {
            "label": "struct NOVOV2.Fee",
            "members": [
              {
                "label": "_stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "_liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "_burnFee",
                "type": "t_uint256"
              },
              {
                "label": "_treasuryFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IUniswapV2Router02)3395": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(NovoNFT)4992": {
            "label": "contract NovoNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "d72eb946a332742846a614418b54b3ab1a841d15e618f1b4e50a744649a831c6": {
      "address": "0x56Cb0724204A6CF99D4Fe2CB25050a9eBA371309",
      "txHash": "0x919923c34cd70af0ee513b6b77885042f03cda2c97ffb63b70bbcf06b342bd34",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:25"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:28"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_owners",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:31"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:34"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_tokenApprovals",
            "type": "t_mapping(t_uint256,t_address)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:37"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:40"
          },
          {
            "contract": "ERC721Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)44_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\ERC721Upgradeable.sol:458"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokens",
            "type": "t_mapping(t_address,t_mapping(t_uint256,t_uint256))",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:22"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_ownedTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:25"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokens",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:28"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "_allTokensIndex",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:31"
          },
          {
            "contract": "ERC721EnumerableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)46_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\token\\ERC721\\extensions\\ERC721EnumerableUpgradeable.sol:175"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "NovoNFT",
            "label": "baseURI",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:32"
          },
          {
            "contract": "NovoNFT",
            "label": "baseExtension",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:33"
          },
          {
            "contract": "NovoNFT",
            "label": "cost",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:34"
          },
          {
            "contract": "NovoNFT",
            "label": "maxMintAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:35"
          },
          {
            "contract": "NovoNFT",
            "label": "claimLimitTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:36"
          },
          {
            "contract": "NovoNFT",
            "label": "mapStakers",
            "type": "t_mapping(t_uint256,t_struct(Stake)3433_storage)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:39"
          },
          {
            "contract": "NovoNFT",
            "label": "mapLockStatus",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "..\\project:\\contracts\\NovoNFT.sol:40"
          },
          {
            "contract": "NovoNFT",
            "label": "stakingNFTs",
            "type": "t_array(t_uint256)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:41"
          },
          {
            "contract": "NovoNFT",
            "label": "lockDays",
            "type": "t_array(t_uint80)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:42"
          },
          {
            "contract": "NovoNFT",
            "label": "feesByLockDays",
            "type": "t_array(t_uint8)dyn_storage",
            "src": "..\\project:\\contracts\\NovoNFT.sol:43"
          },
          {
            "contract": "NovoNFT",
            "label": "novo",
            "type": "t_contract(INOVO)2694",
            "src": "..\\project:\\contracts\\NovoNFT.sol:45"
          },
          {
            "contract": "NovoNFT",
            "label": "maxLockDays",
            "type": "t_uint32",
            "src": "..\\project:\\contracts\\NovoNFT.sol:47"
          },
          {
            "contract": "NovoNFT",
            "label": "minStakingAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:48"
          },
          {
            "contract": "NovoNFT",
            "label": "minted",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:51"
          },
          {
            "contract": "NovoNFT",
            "label": "totalBagSize",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:52"
          },
          {
            "contract": "NovoNFT",
            "label": "totalDiffTimestamp",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoNFT.sol:53"
          },
          {
            "contract": "NovoNFT",
            "label": "baseTimestamp",
            "type": "t_uint80",
            "src": "..\\project:\\contracts\\NovoNFT.sol:54"
          }
        ],
        "types": {
          "t_string_storage": {
            "label": "string"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Stake)3433_storage)": {
            "label": "mapping(uint256 => struct NovoNFT.Stake)"
          },
          "t_struct(Stake)3433_storage": {
            "label": "struct NovoNFT.Stake",
            "members": [
              {
                "label": "stakerName",
                "type": "t_string_storage"
              },
              {
                "label": "principalBalance",
                "type": "t_uint256"
              },
              {
                "label": "bagSizeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimeReward",
                "type": "t_uint256"
              },
              {
                "label": "stakingTimestamp",
                "type": "t_uint80"
              },
              {
                "label": "addtionalWallet",
                "type": "t_address"
              },
              {
                "label": "proxyStatus",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint80": {
            "label": "uint80"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_array(t_uint80)dyn_storage": {
            "label": "uint80[]"
          },
          "t_array(t_uint8)dyn_storage": {
            "label": "uint8[]"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_contract(INOVO)2694": {
            "label": "contract INOVO"
          },
          "t_uint32": {
            "label": "uint32"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_address,t_mapping(t_uint256,t_uint256))": {
            "label": "mapping(address => mapping(uint256 => uint256))"
          },
          "t_array(t_uint256)46_storage": {
            "label": "uint256[46]"
          },
          "t_mapping(t_uint256,t_address)": {
            "label": "mapping(uint256 => address)"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_array(t_uint256)44_storage": {
            "label": "uint256[44]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    },
    "13a23d1209e80ac2afdfd7cd3c3b8d6d71249852a5205a8e9d9f689ff1b58fd2": {
      "address": "0xAfbfeb16568dc2Ef3347be40cbbdBBf5258E9327",
      "txHash": "0x4119c0895768274dcb2dbbca54aeb104eff5cf95d5cf056cfce43504d11c67cf",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "..\\@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "NOVOV2",
            "label": "_rOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:43"
          },
          {
            "contract": "NOVOV2",
            "label": "_tOwned",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:44"
          },
          {
            "contract": "NOVOV2",
            "label": "_allowances",
            "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:45"
          },
          {
            "contract": "NOVOV2",
            "label": "_isExcludedFromFee",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:46"
          },
          {
            "contract": "NOVOV2",
            "label": "_isExcluded",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:47"
          },
          {
            "contract": "NOVOV2",
            "label": "_isBlacklisted",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:48"
          },
          {
            "contract": "NOVOV2",
            "label": "_isSwap",
            "type": "t_mapping(t_address,t_bool)",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:49"
          },
          {
            "contract": "NOVOV2",
            "label": "_excluded",
            "type": "t_array(t_address)dyn_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:51"
          },
          {
            "contract": "NOVOV2",
            "label": "_tTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:54"
          },
          {
            "contract": "NOVOV2",
            "label": "_rTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:55"
          },
          {
            "contract": "NOVOV2",
            "label": "_targetSupply",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:56"
          },
          {
            "contract": "NOVOV2",
            "label": "_tFeeTotal",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:57"
          },
          {
            "contract": "NOVOV2",
            "label": "_name",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:59"
          },
          {
            "contract": "NOVOV2",
            "label": "_symbol",
            "type": "t_string_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:60"
          },
          {
            "contract": "NOVOV2",
            "label": "_decimals",
            "type": "t_uint8",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:61"
          },
          {
            "contract": "NOVOV2",
            "label": "_swapFee",
            "type": "t_struct(Fee)5027_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:63"
          },
          {
            "contract": "NOVOV2",
            "label": "_previousSwapFee",
            "type": "t_struct(Fee)5027_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:64"
          },
          {
            "contract": "NOVOV2",
            "label": "_transferFee",
            "type": "t_struct(Fee)5027_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:65"
          },
          {
            "contract": "NOVOV2",
            "label": "_previousTransferFee",
            "type": "t_struct(Fee)5027_storage",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:66"
          },
          {
            "contract": "NOVOV2",
            "label": "uniswapV2Router",
            "type": "t_contract(IUniswapV2Router02)3395",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:68"
          },
          {
            "contract": "NOVOV2",
            "label": "_ncos",
            "type": "t_contract(NovoNFT)4992",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:69"
          },
          {
            "contract": "NOVOV2",
            "label": "uniswapV2Pair",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:70"
          },
          {
            "contract": "NOVOV2",
            "label": "_initializerAccount",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:71"
          },
          {
            "contract": "NOVOV2",
            "label": "_burnAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:72"
          },
          {
            "contract": "NOVOV2",
            "label": "_treasuryAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:73"
          },
          {
            "contract": "NOVOV2",
            "label": "_stakingPoolAddress",
            "type": "t_address",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:74"
          },
          {
            "contract": "NOVOV2",
            "label": "inSwapAndLiquify",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:76"
          },
          {
            "contract": "NOVOV2",
            "label": "swapAndLiquifyEnabled",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:77"
          },
          {
            "contract": "NOVOV2",
            "label": "_maxTxAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:79"
          },
          {
            "contract": "NOVOV2",
            "label": "_treasuryStackedAmount",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:80"
          },
          {
            "contract": "NOVOV2",
            "label": "numTokensSellToAddToLiquidity",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:81"
          },
          {
            "contract": "NOVOV2",
            "label": "numTokensSellToAddToTreasury",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:82"
          },
          {
            "contract": "NOVOV2",
            "label": "_burnStopped",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:84"
          },
          {
            "contract": "NOVOV2",
            "label": "_canTrade",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:85"
          },
          {
            "contract": "NOVOV2",
            "label": "_upgraded",
            "type": "t_bool",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:86"
          },
          {
            "contract": "NOVOV2",
            "label": "launchTime",
            "type": "t_uint256",
            "src": "..\\project:\\contracts\\NovoTokenV2.sol:87"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
            "label": "mapping(address => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_address)dyn_storage": {
            "label": "address[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_struct(Fee)5027_storage": {
            "label": "struct NOVOV2.Fee",
            "members": [
              {
                "label": "_stakingFee",
                "type": "t_uint256"
              },
              {
                "label": "_liquidityFee",
                "type": "t_uint256"
              },
              {
                "label": "_burnFee",
                "type": "t_uint256"
              },
              {
                "label": "_treasuryFee",
                "type": "t_uint256"
              }
            ]
          },
          "t_contract(IUniswapV2Router02)3395": {
            "label": "contract IUniswapV2Router02"
          },
          "t_contract(NovoNFT)4992": {
            "label": "contract NovoNFT"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          }
        }
      }
    }
  }
}
